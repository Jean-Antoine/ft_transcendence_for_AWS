services:

  postgres:
    build: ./postgres
    image: postgres
    container_name: postgres
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - ".env"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  backend:
    build: ./backend
    image: backend
    container_name: backend
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - media:/media/
    develop:
      watch:
        - action: sync
          path: ./srcs/backend/apps
          target: /apps/
        - action: sync+restart
          path: ./srcs/backend/requirements.txt
          target: /
    depends_on:
      postgres:
          condition: service_healthy
    env_file:
      - ".env"

  frontend:
    build: ./frontend
    image: frontend
    container_name: frontend
    volumes:
      - media:/media/
    restart: always
    develop:
      watch:
        - action: sync
          path: ./srcs/frontend/site
          target: /site/
          ignore:
            - node_modules/
        - action: sync+restart
          path: ./srcs/frontend/nginx.conf
          target: /etc/nginx/nginx.conf
    ports:
      - "8888:443"
    depends_on:
      - backend

  redis:
    image: redis
    container_name: redis


volumes:
  db:
    name: db
  media:
    name: media
